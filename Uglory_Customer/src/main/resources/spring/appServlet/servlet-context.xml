<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="edu.kh.ugloryC" />
	
	<!-- interceptors : 인터셉터를 모아둔 태그  -->
	<!-- <interceptors>
		
		interceptor : 요청이 Dispatcher Servlet에서 Controller에 도달하기 전 또는 후에 
			 요청/응답 객체(req, resp)를 가로채서 사용할 수 있는 객체
		
		<interceptor>
 			가로챌 요청의 패턴을 지정
			<mapping path="/**"/>
		
 			인터셉터 역할을 수행할 클래스를 찾아 bean으로 등록 
			<beans:bean id="boardTypeInterceptor" class="edu.kh.comm.common.interceptor.BoardTypeInterceptor" />
			
		</interceptor>
	
	</interceptors>  -->
	
		<!-- 트랜잭션 처리시 @Transactional 어노테이션 사용 예정 
		@Transactional : 클래스 또는 메서드 수행 후 트랜잭션 처리를 하라고 알려주는 어노테이션
		-> 해당 어노테이션을 인식하라는 설정이 필요! -> annotation-driven
		
		오류 뜨면 하단 namespaces에 tx, aop 추가되었는지 확인)
	-->
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 자동으로 트랜잭션 처리 도와줌 / proxy 이용 태그 -->
	<aop:aspectj-autoproxy proxy-target-class="false"/>
	
	
	<!-- @Scheduled 어노테이션 인식을 위한 태그 -->
	<task:annotation-driven/>
	
	
	<!-- Websocket 요청 시 핸들러 클래스와 연결하기 -->
	
	<!-- <beans:bean id="chatHandler" class="edu.kh.comm.chat.model.websocket.ChatWebsocketHandler" />
	
	
	<websocket:handlers>
	
		 웹소켓 요청을 처리할 bean 지정
		<websocket:mapping handler="chatHandler" path="/chat"/>
		
		<websocket:handshake-interceptors>
			interceptor : http 통신에서 req, resp 가로채서 필요한 기능을 추가해주는 역할 
			
				 handshake-interceptor : 요청 관련 데이터 중 HttpSession(로그인 정보, 채팅방 번호)을 가로채서
				 						 WebSocketSession에 넣어주는 역할
			
			
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
		</websocket:handshake-interceptors>
		
		SockJS 라이브러리를 이용해서 만들어진 웹소켓 객체임을 인식
		<websocket:sockjs />
	
	</websocket:handlers> -->
	
</beans:beans>
