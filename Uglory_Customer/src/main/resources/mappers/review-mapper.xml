<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="reviewMapper">

	<!-- 리뷰 전체 조회  -->
	<resultMap type="reviewSelectInfo" id="reviewSelectInfo_rm">
		<id property="reviewNo" column="REVIEW_NO" />
		<result property="reviewContent" column="REVIEW_CONTENT" />
		<result property="reviewEnrollDate" column="REVIEW_ENROLL_DT" />
		<result property="starRating" column="STAR_RATING" />
		
		<result property="memberNo" column="MEMBER_NO" />
		<result property="memberName" column="MEMBER_NAME" />
	</resultMap>
	
	<!-- 구독 상품 미작성 리뷰 -->
	<resultMap type="unWrittenSubscription" id="unWrittenSubscription_rm">
		<id property="subOrderCode" column="S_ORDER_CD" />
		<result property="subDate" column="S_DT" />
		<result property="reviewCode" column="REVIEW_CD" />
		<result property="subName" column="S_NM" />
		<result property="subPrice" column="S_PRICE" />
	</resultMap>
	
	<!-- 개별 상품 미작성 리뷰 -->
	<resultMap type="unWrittenProduct" id="unWrittenProduct_rm">
		<id property="productOrderCode" column="P_ORDER_CD" />
		<!-- 이미지 경로 불러와야할까? -->
		<result property="productOrderDate" column="P_ORDER_DT" />
		<result property="productName" column="PRODUCT_NM" />
		<result property="optionName" column="OPTION_NM" />
		<result property="totalPrice" column="TOTAL_PRICE" />
		<result property="reviewCode" column="REVIEW_CD" />
		<result property="productCode" column="P_CD" />
		
	
	</resultMap>
	
	<!-- 리뷰 작성 -->
	<resultMap type="reviewWrite" id="reviewWrite_rm">
		<id property="reviewNo" column="REVIEW_NO" />
		<result property="reviewContent" column="REVIEW_CONTENT" />
		<result property="reviewEnrollDate" column="REVIEW_ENROLL_DT" />
		<result property="starRating" column="STAR_RATING" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="memberName" column="MEMBER_NAME" />
		
		<result property="productOrderDate" column="P_ORDER_DT" />
		<result property="productName" column="PRODUCT_NM" />
		
		<result property="productCode" column="P_CD" />
		<result property="productOrderCode" column="P_ORDER_CD" />
		<result property="subOrderCode" column="S_ORDER_CD" />
		
		<result property="optionName" column="OPTION_NM" />
		<result property="totalPrice" column="TOTAL_PRICE" />
		<result property="reviewCode" column="REVIEW_CD" />
		
		<collection property="imageList" column="REVIEW_NO" javaType="java.util.ArrayList" ofType="reviewImage" select="selectImageList" />
	</resultMap>
	
	
	<!-- 리뷰 이미지 조회용 -->
	<resultMap type="reviewImage" id="reviewImage_rm">
		<id property="reviewImageNo" column="REVIEW_IMG_NO" />
		<result property="reviewImageRename" column="REVIEW_IMG_RENAME" />
		<result property="reviewImageLevel" column="REVIEW_IMG_LEVEL" />
		<result property="reviewNo" column="REVIEW_NO" />
	</resultMap>


	<!-- 리뷰 작성 시 상품 조회용 -->
	<resultMap type="unWrittenProduct" id="selectProduct_rm">
		<id property="productOrderCode" column="P_ORDER_CD" />
		<result property="productOrderDate" column="P_ORDER_DT" />
		<result property="productName" column="PRODUCT_NM" />
		<result property="optionName" column="OPTION_NM" />
		<result property="totalPrice" column="TOTAL_PRICE" />
	
	</resultMap>

	<!-- 리뷰 작성 시 구독 조회용 -->
	<resultMap type="unWrittenSubscription" id="selectSub_rm">
		<id property="subOrderCode" column="S_ORDER_CD" />
		<result property="subDate" column="S_DT" />
		<result property="subName" column="S_NM" />
		<result property="subPrice" column="S_PRICE" />
	</resultMap>
	
	
	
	
	
	
	
	






	<!-- 리뷰글 삽입 -->
	<insert id="insertReview">
		
		<selectKey keyProperty="reviewWrite.reviewNo" resultType="_int" order="BEFORE">
			SELECT SEQ_REVIEW_NO.NEXTVAL FROM DUAL
		</selectKey>
		
		INSERT INTO REVIEW
		VALUES (#{reviewWrite.reviewNo}, #{reviewWrite.reviewContent}, SYSDATE, #{starRating}, 
		#{reviewWrite.memberNo}, 
	
		
		<if test="reviewWrite.productCode == 0">
			NULL,
		</if>
		<if test="reviewWrite.productCode != 0">
			#{reviewWrite.productCode},
		</if>
		
		<if test="reviewWrite.productOrderCode == 0">
			NULL,
		</if>
		<if test="reviewWrite.productOrderCode != 0">
			#{reviewWrite.productOrderCode},
		</if>
		
		<if test="reviewWrite.subOrderCode == 0">
			NULL,
		</if>
		<if test="reviewWrite.subOrderCode != 0">
			#{reviewWrite.subOrderCode},
		</if>
		
		 #{reviewWrite.reviewCode})
		
	</insert>
	 
	 
	 <!-- 리뷰 이미지 삽입 List -->
	 <insert id="insertReviewImage" parameterType="list">
	 	INSERT INTO REVIEW_IMG
	 	SELECT SEQ_REVIEW_IMG_NO.NEXTVAL REVIEW_IMG_NO, A.* FROM(
	 		
	 		<foreach collection="list" item="img" separator="UNION ALL">
	 			SELECT 	#{img.reviewImageReName} REVIEW_IMG_RENAME,
	 					#{img.reviewImageLevel} REVIEW_IMG_LEVEL,
	 					#{img.reviewNo} REVIEW_NO
	 			FROM DUAL
	 		</foreach>
	 	) A
	 </insert>
		
		
	<!-- 구독상품 미작성 리뷰 조회 -->
	<select id="subUnWrittenList" resultMap="unWrittenSubscription_rm">
		SELECT S_ORDER_CD, S_DT, S_NM, S_PRICE
		FROM SUBS_ORDER
		JOIN SUBS USING(S_CD)
		WHERE S_REVIEW_ST = 'N'
		AND SUBS_ORDER.MEMBER_NO = #{memberNo}
		ORDER BY S_ORDER_CD
	</select>
	
	
	<!-- 개별상품 미작성 리뷰 조회 -->
	<select id="productUnWrittenList" resultMap="unWrittenProduct_rm">
		SELECT P_ORDER_CD, P_ORDER_DT, PRODUCT_NM, OPTION_NM, TOTAL_PRICE, OPTION_TYPE.P_CD
		FROM PRODUCT_ORDER
		JOIN OPTION_TB USING(P_ORDER_CD)
		JOIN OPTION_TYPE USING(OPTION_CD)
		JOIN PRODUCT ON(OPTION_TYPE.P_CD = PRODUCT.P_CD)
		WHERE P_REVIEW_ST = 'N'
		AND PRODUCT_ORDER.MEMBER_NO = #{memberNo}
	</select>
		
	
	<!-- 구독 리뷰 상태 'Y' -->
	<update id="updateSubReviewST">
		UPDATE SUBS_ORDER
		SET S_REVIEW_ST = 'Y'
		WHERE S_ORDER_CD = #{subOrderCode}
	</update>
	
	
	<!-- 상품 리뷰 상태 'Y' -->
	<update id="updateProductReviewST">
		UPDATE PRODUCT_ORDER
		SET P_REVIEW_ST = 'Y'
		WHERE P_ORDER_CD = #{productOrderCode}
	</update>
	
	
	<!-- 리뷰 작성 시 상품 정보 조회 -->
	<select id="productSelect" resultMap="selectProduct_rm">
		SELECT P_ORDER_CD, PRODUCT_NM, P_ORDER_DT, OPTION_NM, TOTAL_PRICE
		FROM PRODUCT_ORDER
		JOIN MEMBER USING(MEMBER_NO)
		JOIN OPTION_TB USING(P_ORDER_CD)
		JOIN OPTION_TYPE USING(OPTION_CD)
		JOIN PRODUCT ON(OPTION_TYPE.P_CD = PRODUCT.P_CD)
		WHERE P_ORDER_CD = #{orderCode}
		AND MEMBER_NO = #{memberNo}
	</select>
	
	
	<!-- 리뷰 작성 시 구독 정보 조회 -->
	<select id="subSelect" resultMap="selectSub_rm">
		SELECT S_ORDER_CD, S_DT, S_NM, S_PRICE
		FROM SUBS_ORDER
		JOIN MEMBER USING(MEMBER_NO)
		JOIN SUBS USING(S_CD)
		WHERE S_ORDER_CD = #{orderCode}
		AND MEMBER_NO = #{memberNo}
	</select>
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
</mapper>
