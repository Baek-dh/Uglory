<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="reviewMapper">

	<!-- 리뷰 전체 조회  -->
	<resultMap type="reviewSelectInfo" id="reviewSelectInfo_rm">
		<id property="reviewNo" column="REVIEW_NO" />
		<result property="reviewContent" column="REVIEW_CONTENT" />
		<result property="reviewEnrollDate" column="REVIEW_ENROLL_DT" />
		<result property="starRating" column="STAR_RATING" />
		<result property="reviewCode" column="REVIEW_CD" />
		
		<result property="memberNo" column="MEMBER_NO" />
		<result property="memberName" column="MEMBER_NAME" />
		
		<result property="thumbnail" column="THUMBNAIL" />
	</resultMap>
	
	<!-- 구독 상품 미작성 리뷰 -->
	<resultMap type="unWrittenSubscription" id="unWrittenSubscription_rm">
		<id property="subOrderCode" column="S_ORDER_CD" />
		<result property="subDate" column="S_DT" />
		<result property="reviewCode" column="REVIEW_CD" />
		<result property="subName" column="S_NM" />
		<result property="subPrice" column="S_PRICE" />
	</resultMap>
	
	<!-- 개별 상품 미작성 리뷰 -->
	<resultMap type="unWrittenProduct" id="unWrittenProduct_rm">
		<id property="productOrderCode" column="P_ORDER_CD" />
		<!-- 이미지 경로 불러와야할까? -->
		<result property="productOrderDate" column="P_ORDER_DT" />
		<result property="productName" column="PRODUCT_NM" />
		<result property="optionName" column="OPTION_NM" />
		<result property="totalPrice" column="TOTAL_PRICE" />
		<result property="reviewCode" column="REVIEW_CD" />
		<result property="productCode" column="P_CD" />
		<result property="imgRoot" column="IMG_ROOT" />
		
	
	</resultMap>
	
	<!-- 리뷰 작성 -->
	<resultMap type="reviewWrite" id="reviewWrite_rm">
		<id property="reviewNo" column="REVIEW_NO" />
		<result property="reviewContent" column="REVIEW_CONTENT" />
		<result property="reviewEnrollDate" column="REVIEW_ENROLL_DT" />
		<result property="starRating" column="STAR_RATING" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="memberName" column="MEMBER_NAME" />
		
		<result property="productOrderDate" column="P_ORDER_DT" />
		<result property="productName" column="PRODUCT_NM" />
		
		<result property="productCode" column="P_CD" />
		<result property="productOrderCode" column="P_ORDER_CD" />
		<result property="subOrderCode" column="S_ORDER_CD" />
		
		<result property="optionName" column="OPTION_NM" />
		<result property="totalPrice" column="TOTAL_PRICE" />
		<result property="reviewCode" column="REVIEW_CD" />
		
		<collection property="imageList" column="REVIEW_NO" javaType="java.util.ArrayList" ofType="reviewImage" select="selectImageList" />
	</resultMap>
	
	
	<!-- 리뷰 이미지 조회용 -->
	<resultMap type="reviewImage" id="reviewImage_rm">
		<id property="reviewImageNo" column="REVIEW_IMG_NO" />
		<result property="reviewImageRename" column="REVIEW_IMG_RENAME" />
		<result property="reviewImageLevel" column="REVIEW_IMG_LEVEL" />
		<result property="reviewNo" column="REVIEW_NO" />
	</resultMap>


	<!-- 리뷰 작성 시 상품 조회용 -->
	<resultMap type="unWrittenProduct" id="selectProduct_rm">
		<id property="productOrderCode" column="P_ORDER_CD" />
		<result property="productOrderDate" column="P_ORDER_DT" />
		<result property="productName" column="PRODUCT_NM" />
		<result property="optionName" column="OPTION_NM" />
		<result property="totalPrice" column="TOTAL_PRICE" />
		<result property="imgRoot" column="IMG_ROOT" />
	
	</resultMap>

	<!-- 리뷰 작성 시 구독 조회용 -->
	<resultMap type="unWrittenSubscription" id="selectSub_rm">
		<id property="subOrderCode" column="S_ORDER_CD" />
		<result property="subDate" column="S_DT" />
		<result property="subName" column="S_NM" />
		<result property="subPrice" column="S_PRICE" />
	</resultMap>
	
	
	<!-- 리뷰 상세 조회 -->
	<resultMap type="reviewDetail" id="reviewDetail_rm">
		<id property="reviewNo" column="REVIEW_NO" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="memberName" column="MEMBER_NAME" />
		<result property="reviewEnrollDate" column="REVIEW_ENROLL_DT" />
		<result property="reviewCode" column="REVIEW_CD" />
		<result property="starRating" column="STAR_RATING" />
		<result property="reviewContent" column="REVIEW_CONTENT" />
		
		<collection property="imageList" column="REVIEW_NO" javaType="java.util.ArrayList" ofType="reviewImage" select="selectImageList" />
		
	</resultMap>
	 
	
	
	
	
	
	
	






	<!-- 리뷰글 삽입 -->
	<insert id="insertReview">
		
		<selectKey keyProperty="reviewWrite.reviewNo" resultType="_int" order="BEFORE">
			SELECT SEQ_REVIEW_NO.NEXTVAL FROM DUAL
		</selectKey>
		
		INSERT INTO REVIEW
		VALUES (#{reviewWrite.reviewNo}, #{reviewWrite.reviewContent}, SYSDATE, #{starRating}, 
		#{reviewWrite.memberNo}, 
	
		
		<if test="reviewWrite.productCode == 0">
			NULL,
		</if>
		<if test="reviewWrite.productCode != 0">
			#{reviewWrite.productCode},
		</if>
		
		<if test="reviewWrite.productOrderCode == null">
			NULL,
		</if>
		<if test="reviewWrite.productOrderCode != null">
			#{reviewWrite.productOrderCode},
		</if>
		
		<if test="reviewWrite.subOrderCode == null">
			NULL,
		</if>
		<if test="reviewWrite.subOrderCode != null">
			#{reviewWrite.subOrderCode},
		</if>
		
		 #{reviewWrite.reviewCode})
		
	</insert>
	 
	 
	 <!-- 리뷰 이미지 삽입 List -->
	 <insert id="insertReviewImage" parameterType="list">
	 	INSERT INTO REVIEW_IMG
	 	SELECT SEQ_REVIEW_IMG_NO.NEXTVAL REVIEW_IMG_NO, A.* FROM(
	 		
	 		<foreach collection="list" item="img" separator="UNION ALL">
	 			SELECT 	#{img.reviewImageRename} REVIEW_IMG_RENAME,
	 					#{img.reviewImageLevel} REVIEW_IMG_LEVEL,
	 					#{img.reviewNo} REVIEW_NO
	 			FROM DUAL
	 		</foreach>
	 	) A
	 </insert>
		
		
	<!-- 구독상품 미작성 리뷰 조회 -->
	<select id="subUnWrittenList" resultMap="unWrittenSubscription_rm">
		SELECT S_ORDER_CD, S_DT, S_NM, S_PRICE
		FROM SUBS_ORDER
		JOIN SUBS USING(S_CD)
		WHERE S_REVIEW_ST = 'N'
		AND SUBS_ORDER.MEMBER_NO = #{memberNo}
		ORDER BY S_ORDER_CD
	</select>
	
	
	<!-- 개별상품 미작성 리뷰 조회 -->
	<select id="productUnWrittenList" resultMap="unWrittenProduct_rm">
		<!-- SELECT DISTINCT PRODUCT.P_CD,P_ORDER_CD, P_ORDER_DT, PRODUCT_NM, TOTAL_PRICE
		FROM PRODUCT_ORDER
		JOIN OPTION_TB USING(P_ORDER_CD)
		JOIN OPTION_TYPE USING(OPTION_CD)
		JOIN PRODUCT ON(OPTION_TYPE.P_CD = PRODUCT.P_CD)
		WHERE P_REVIEW_ST = 'N'
		AND PRODUCT_ORDER.MEMBER_NO  = #{memberNo} -->
		
		SELECT DISTINCT P_ORDER_CD, P.P_CD, PRODUCT_NM, P_ORDER_DT, TOTAL_PRICE, 
		(SELECT IMG_ROOT
		FROM PRODUCT_IMG I
		WHERE IMG_LEVEL = 0
		AND I.P_CD = P.P_CD) IMG_ROOT
		FROM PRODUCT_ORDER
		JOIN OPTION_TB USING(P_ORDER_CD)
		JOIN OPTION_TYPE O USING(OPTION_CD)
		JOIN PRODUCT P ON(P.P_CD = O.P_CD)
		JOIN PRODUCT_IMG I ON(I.P_CD = P.P_CD)
		WHERE MEMBER_NO = 6
		AND (P_ORDER_CD, P.P_CD) NOT IN (SELECT P_ORDER_CD, P.P_CD FROM REVIEW
		                               WHERE MEMBER_NO = 6
									   AND S_ORDER_CD IS NULL)
	</select>
		
	
	<!-- 구독 리뷰 상태 'Y' -->
	<update id="updateSubReviewST">
		UPDATE SUBS_ORDER
		SET S_REVIEW_ST = 'Y'
		WHERE S_ORDER_CD = #{subOrderCode}
	</update>
	
	
	<!-- 상품 리뷰 상태 'Y' -->
	<update id="updateProductReviewST">
		UPDATE PRODUCT_ORDER
		SET P_REVIEW_ST = 'Y'
		WHERE P_ORDER_CD = #{productOrderCode}
	</update>
	
	
	<!-- 리뷰 작성 시 상품 정보 조회 -->
	<select id="productSelect" resultMap="selectProduct_rm">
		<!-- SELECT P_ORDER_CD, PRODUCT_NM, P_ORDER_DT, OPTION_NM, TOTAL_PRICE
		FROM PRODUCT_ORDER
		JOIN MEMBER USING(MEMBER_NO)
		JOIN OPTION_TB USING(P_ORDER_CD)
		JOIN OPTION_TYPE USING(OPTION_CD)
		JOIN PRODUCT ON(OPTION_TYPE.P_CD = PRODUCT.P_CD)
		WHERE P_ORDER_CD = #{orderCode}
		AND MEMBER_NO = #{memberNo} -->
		SELECT P_ORDER_CD, PRODUCT_NM, P_ORDER_DT, TOTAL_PRICE, 
		(SELECT I.IMG_ROOT
		FROM PRODUCT_IMG I
		WHERE IMG_LEVEL = 0
		AND I.P_CD = P.P_CD) IMG_ROOT
		FROM PRODUCT_ORDER
		JOIN MEMBER USING(MEMBER_NO)
		JOIN OPTION_TB USING(P_ORDER_CD)
		JOIN OPTION_TYPE O USING(OPTION_CD)
		JOIN PRODUCT P ON(O.P_CD = P.P_CD)
		JOIN PRODUCT_IMG I ON (I.P_CD = P.P_CD)
		WHERE MEMBER_NO = #{memberNo}
		AND P.P_CD = #{productCode}
		AND ROWNUM = 1
	</select>
	
	<select id="productOptionList" resultType="map">
		SELECT OPTION_COUNT, OPTION_NM, OPTION_PRICE
		FROM OPTION_TB 
		JOIN OPTION_TYPE USING(OPTION_CD)
		WHERE P_CD = #{productCode}
		AND P_ORDER_CD = #{orderCode}
	</select>
	
	
	<!-- 리뷰 작성 시 구독 정보 조회 -->
	<select id="subSelect" resultMap="selectSub_rm">
		SELECT S_ORDER_CD, S_DT, S_NM, S_PRICE
		FROM SUBS_ORDER
		JOIN MEMBER USING(MEMBER_NO)
		JOIN SUBS USING(S_CD)
		WHERE S_ORDER_CD = #{orderCode}
		AND MEMBER_NO = #{memberNo}
	</select>
		
		
	
	
	<!-- 리뷰 전체 후기 수 조회 -->
	<select id="selectReviewAllCount" resultType="_int">
		SELECT COUNT(REVIEW_NO)
		FROM(
			SELECT REVIEW_NO, S_REVIEW_ST FROM REVIEW
			JOIN SUBS_ORDER USING(S_ORDER_CD)
			WHERE S_REVIEW_ST = 'Y'
			AND REVIEW_CD IN (1,2)
		
			UNION ALL
		
			SELECT REVIEW_NO, P_REVIEW_ST FROM REVIEW
			JOIN PRODUCT_ORDER USING(P_ORDER_CD)
			WHERE P_REVIEW_ST = 'Y'
			AND REVIEW_CD IN (1,2)
			)
	</select>
	
	
	<!-- 별점 평균 조회 -->
	<select id="selectAvgStar" resultType="_double">
	 	SELECT NVL((SELECT ROUND(AVG(STAR_RATING/2),1) FROM REVIEW
		JOIN MEMBER ON(MEMBER.MEMBER_NO = REVIEW.MEMBER_NO)
		WHERE MEMBER.MEMBER_NO = #{memberNo}), 0 ) FROM DUAL
	</select>
	
	
	<!-- 나의 리뷰 수 조회 -->
	<select id="selectMyReviewCount" resultType="_int">
		SELECT COUNT(*) FROM REVIEW WHERE MEMBER_NO = #{memberNo}
	
		<!-- SELECT (
			SELECT COUNT(*)
			FROM SUBS_ORDER
			JOIN SUBS USING(S_CD)
			WHERE S_REVIEW_ST = 'Y'
			AND SUBS_ORDER.MEMBER_NO = #{memberNo}
		
		) + (
			SELECT COUNT(DISTINCT P_CD)
			FROM PRODUCT_ORDER
			JOIN OPTION_TB USING(P_ORDER_CD)
			JOIN OPTION_TYPE USING(OPTION_CD)
			JOIN PRODUCT USING(P_CD)
			WHERE MEMBER_NO = #{memberNo}
			AND (P_ORDER_CD, P_CD) IN (SELECT P_ORDER_CD, P_CD FROM REVIEW
											WHERE MEMBER_NO = #{memberNo})
		
		) AS MY_UNWRITTEN_REVIEW
		FROM DUAL -->
	</select>
	
	
	<!-- 냐의 미작성 리뷰 수 조회 -->
	<select id="selectUnWrittenCount" resultType="_int">
		SELECT (
			SELECT COUNT(*)
			FROM SUBS_ORDER
			JOIN SUBS USING(S_CD)
			WHERE S_REVIEW_ST = 'N'
			AND SUBS_ORDER.MEMBER_NO = #{memberNo}
		
		) + (
			<!-- SELECT count(*)
			FROM PRODUCT_ORDER
			JOIN OPTION_TB USING(P_ORDER_CD)
			JOIN OPTION_TYPE USING(OPTION_CD)
			JOIN PRODUCT ON(OPTION_TYPE.P_CD = PRODUCT.P_CD)
			WHERE P_REVIEW_ST = 'N'
			AND PRODUCT_ORDER.MEMBER_NO = #{memberNo} -->
			SELECT COUNT(*) FROM (
			SELECT DISTINCT P_ORDER_CD, P_CD
			FROM PRODUCT_ORDER
			JOIN OPTION_TB USING(P_ORDER_CD)
			JOIN OPTION_TYPE USING(OPTION_CD)
			JOIN PRODUCT USING(P_CD)
			WHERE MEMBER_NO = #{memberNo}
			AND (P_ORDER_CD, P_CD) NOT IN (SELECT P_ORDER_CD, P_CD FROM REVIEW
			                                WHERE MEMBER_NO = #{memberNo}
			                                AND S_ORDER_CD IS NULL))
		
		) AS MY_UNWRITTEN_REVIEW
		FROM DUAL
	</select>
	
	
	
	
	<!-- 리뷰 구독 전체 리스트 조회 -->
	<select id="selecSub" resultMap="reviewSelectInfo_rm">
		SELECT REVIEW_NO,
		(SELECT REVIEW_IMG_RENAME 
		FROM REVIEW_IMG I
		WHERE REVIEW_IMG_LEVEL = 0
		AND I.REVIEW_NO = R.REVIEW_NO) THUMBNAIL,
		REVIEW_ENROLL_DT, REVIEW_CONTENT, (STAR_RATING/2) STAR_RATING, REVIEW_CD, MEMBER_NAME
		FROM REVIEW R
		JOIN MEMBER USING(MEMBER_NO)
		WHERE R.REVIEW_CD = 1
		ORDER BY REVIEW_ENROLL_DT DESC
	</select>
	
	
	
	<!-- 리뷰 상품 전체 리스트 조회 -->
	<select id="selectProduct" resultMap="reviewSelectInfo_rm">
		SELECT REVIEW_NO,
		(SELECT REVIEW_IMG_RENAME 
		FROM REVIEW_IMG I
		WHERE REVIEW_IMG_LEVEL = 0
		AND I.REVIEW_NO = R.REVIEW_NO) THUMBNAIL,
		REVIEW_ENROLL_DT, REVIEW_CONTENT, (STAR_RATING/2) STAR_RATING, REVIEW_CD, MEMBER_NAME
		FROM REVIEW R
		JOIN MEMBER USING(MEMBER_NO)
		WHERE R.REVIEW_CD = 2
		ORDER BY REVIEW_ENROLL_DT DESC
	</select>
	
	
	<!-- 리뷰 전체 조회 -->
	<select id="allRevieList" resultMap="reviewSelectInfo_rm">
		SELECT REVIEW_NO,
		(SELECT REVIEW_IMG_RENAME 
		FROM REVIEW_IMG I
		WHERE REVIEW_IMG_LEVEL = 0
		AND I.REVIEW_NO = R.REVIEW_NO) THUMBNAIL,
		REVIEW_ENROLL_DT, REVIEW_CONTENT, (STAR_RATING/2) STAR_RATING, REVIEW_CD, MEMBER_NAME
		FROM REVIEW R
		JOIN MEMBER USING(MEMBER_NO)
		ORDER BY REVIEW_ENROLL_DT DESC
	</select>
		
		
	<!-- 나의 리뷰 목록 조회 -->
	<select id="selectMyReview" resultMap="reviewSelectInfo_rm">
		SELECT REVIEW_NO,
			(SELECT REVIEW_IMG_RENAME 
			FROM REVIEW_IMG I
			WHERE REVIEW_IMG_LEVEL = 0
			AND I.REVIEW_NO = R.REVIEW_NO) THUMBNAIL,
			REVIEW_ENROLL_DT, REVIEW_CONTENT, (STAR_RATING/2) STAR_RATING, REVIEW_CD, MEMBER_NAME
		FROM REVIEW R
		JOIN MEMBER USING(MEMBER_NO)
		WHERE MEMBER_NO = #{memberNo}
		ORDER BY REVIEW_ENROLL_DT DESC
	</select>
		
		
	
	<!-- 리뷰 상세 조회 -->
	<select id="selectReviewDetail" resultMap="reviewDetail_rm">
		SELECT REVIEW_NO, REVIEW_ENROLL_DT, MEMBER_NAME, REVIEW_CONTENT, (STAR_RATING/2) AS STAR_RATING, 
			    (SELECT CASE WHEN (SELECT REVIEW_CD FROM REVIEW WHERE REVIEW_NO = #{reviewNo}) = 1
			            THEN (SELECT S_NM 
			                 FROM REVIEW
			                 JOIN SUBS_ORDER USING(S_ORDER_CD)
			                 JOIN SUBS  USING(S_CD)
			                 WHERE REVIEW_NO = #{reviewNo})    
			        
			        ELSE (SELECT PRODUCT_NM 
			             FROM REVIEW
			             JOIN PRODUCT USING(P_CD)
			             WHERE REVIEW_NO = #{reviewNo})
			        END 
			    FROM DUAL) AS PRODUCT_NM
		FROM REVIEW
		JOIN MEMBER USING(MEMBER_NO)
		WHERE REVIEW_NO = #{reviewNo}
		AND REVIEW_CD IN (1,2)
	</select>
	
	
	
	<!-- 특정 리뷰 이미지 목록 조회 -->
	<select id="selectImageList" resultMap="reviewImage_rm">
		SELECT * FROM REVIEW_IMG
		WHERE REVIEW_NO = #{reviewNo}
		ORDER BY REVIEW_IMG_LEVEL
	</select>
	
	
	<!-- 게시판 삭제 -->
	<delete id="reviewDelete" >
		UPDATE REVIEW SET
		
		<if test="reviewCode == 1">
			REVIEW_CD = 3
		</if>
		
		<if test="reviewCode == 2">
			REVIEW_CD = 4
		</if>
		
		WHERE REVIEW_NO = #{reviewNo}
		
	</delete>
		
		
		
		
		
		
		
		
		
		
		
		
</mapper>
