<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="productMapper">

	<!-- 상품 상세조회용 resultMap -->   
  	<resultMap type="detail" id="detail_rm">
    	<id property="productCode" column="P_CD"/>
      	<result property="productName" column="PRODUCT_NM"/>
      	<result property="productPrice" column="PRODUCT_PRICE"/>
      	<result property="productInfo" column="PRODUCT_INFO"/>
      	
      	<result property="optionName" column="OPTION_NM"/>
      	<result property="optionPrice" column="OPTION_PRICE"/>
      	
      	<result property="producer" column="PRODUCER"/>
      	<result property="origin" column="ORIGIN"/>
      	
      	<result property="star" column="STAR_RATING"/>
      	<result property="reviewNo" column="REVIEW_NO"/>
      	

    </resultMap>
    
    <!-- 주문 페이지 내 선택한 옵션에 따른 조회 결과를 담은 resultMap -->
	<resultMap type="OptionType" id="orderOptionProduct_rm">
		<id property="productCode" column="P_CD"/>
		<result property="optionCode" column="OPTION_CD"/>
		<result property="optionName" column="OPTION_NM"/>
		<result property="optionPrice" column="OPTION_PRICE"/>
		<result property="productName" column="PRODUCT_NM"/>
		<result property="productCategoryNo" column="P_CATEGORY_NO"/>
		<result property="optionNo" column="OPTION_NO"/>
		<result property="optionCount" column="OPTION_COUNT"/>
	</resultMap>
	
	<!-- 장바구니 조회 resultMap -->
	<resultMap type="productCart" id="productCart_rm">
		<id property="optionNo" column="OPTION_NO"/>
		<result property="optionCode" column="OPTION_CD"/>
		<result property="categoryNo" column="P_CATEGORY_NO"/>
		<result property="productCode" column="P_CD"/>
		<result property="optionName" column="OPTION_NM"/>
		<result property="optionPrice" column="OPTION_PRICE"/>
		<result property="productName" column="PRODUCT_NM"/>
		<result property="productPrice" column="PRODUCT_PRICE"/>
		<result property="optionCount" column="OPTION_COUNT"/>
	</resultMap>
     
    <!-- 상품 상세 조회 -->
    <!-- 별점 개수, 리뷰 개수 필요 -->
	<select id="productDetail" resultMap="detail_rm">
		SELECT P_CD, PRODUCT_NM, PRODUCT_PRICE, PRODUCT_INFO, PRODUCER, ORIGIN
		FROM PRODUCT
		JOIN FARM USING(FARM_NO)
		WHERE P_CD = ${productCode}
	</select>
	
	<!-- 상품 상세 페이지 별점 조회 -->
	<select id="selectStar" resultType="_double">
		SELECT CASE WHEN  (SELECT COUNT(*) FROM REVIEW R3 WHERE R3.P_CD=P.P_CD) = 0 THEN 0
		        ELSE  ROUND((((SELECT SUM(STAR_RATING) FROM REVIEW R4 WHERE R4.P_CD=P.P_CD) / (SELECT COUNT(*) FROM REVIEW R5 WHERE R5.P_CD=P.P_CD))/2),1)
		        END AS STAR_AVG
		FROM PRODUCT P
		WHERE P.P_CD = ${productCode}
		
		
	</select>
	
	<!-- 상품 상세 페이지 리뷰 수 조회 -->
	<select id="countReview" resultType="_int">
		SELECT COUNT(*)
		FROM REVIEW
		WHERE P_CD = ${productCode}
	</select>
	
	<!-- 주문 페이지 내 옵션 조회 -->
	<select id="orderOptionSelect"  resultMap="orderOptionProduct_rm">
		SELECT OPTION_CD, OPTION_NM, OPTION_PRICE, PRODUCT_NM, P_CD, P_CATEGORY.P_CATEGORY_NO
		FROM OPTION_TYPE
		JOIN PRODUCT USING(P_CD)
		JOIN P_CATEGORY ON(PRODUCT.P_CATEGORY_NO = P_CATEGORY.P_CATEGORY_NO)
		WHERE P_CD = ${productCode}
		AND OPTION_CD IN 
		<foreach item="item" collection="optionCodeList" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
	
	<!-- 장바구니 -> 결제 옵션 조회 -->
	<select id="cartOrder" resultMap="orderOptionProduct_rm">
		SELECT OPTION_CD, OPTION_NM, OPTION_PRICE, PRODUCT_NM, P_CD, P_CATEGORY.P_CATEGORY_NO, OPTION_COUNT
		FROM OPTION_TB
		JOIN OPTION_TYPE USING(OPTION_CD)
		JOIN PRODUCT USING(P_CD)
		JOIN P_CATEGORY ON(PRODUCT.P_CATEGORY_NO = P_CATEGORY.P_CATEGORY_NO)
		WHERE OPTION_NO IN
		<foreach item="item" collection="optionNoList" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
	
	
	<!-- 주문번호 생성 -->
	<select id="createProductOrderCode" resultType="string">
		SELECT CONCAT(TO_CHAR(SYSDATE, 'YYYYMMDD-"00"'), SEQ_P_ORDER_CD.NEXTVAL) as temp FROM DUAL
	</select>
	
	<!-- 주문정보 입력 -->
	<insert id="productOrder">
		INSERT INTO PRODUCT_ORDER VALUES (
				#{pOrderCode},
				SYSDATE, 
				#{pOrderName}, 
				#{pOrderPhone}, 
				#{pOrderAddress},
				#{totalAmount}, 
				#{pOrderReq}, 
				'N', 
				#{memberNo}, 
				1)
	</insert>
	
	<!-- 결제 시 OPTION_TB 삽입 -->
	<insert id="insertOptionTb">
		INSERT INTO OPTION_TB VALUES 
		(SEQ_OPTION_NO.NEXTVAL, #{optionCode}, #{optionAmout}, #{pOrderCode})
	</insert>
	
	<!-- 결제 정보 삽입 -->
	<insert id="productPay">
		INSERT INTO PRODUCT_PAY VALUES(
			#{productPayNo},
			SYSDATE,
			#{totalAmount},
			#{memberNo},
			#{pOrderCode})		
	</insert>
	
	<!-- 장바구니 테이블에 삽입을 위한 옵션TB 삽입 -->
	<insert id="insertOptionInfo" useGeneratedKeys="true">
	
		<selectKey keyProperty="optionNo" resultType="_int" order="BEFORE">
			SELECT SEQ_OPTION_NO.NEXTVAL FROM DUAL
		</selectKey>
		
		INSERT INTO OPTION_TB VALUES
		(#{optionNo}, #{optionCode}, #{optionAmout} , NULL)
	</insert>
	
	<!-- 장바구니 삽입 -->
	<insert id="insertProductCart">
		INSERT INTO CART 
		<foreach collection="optionNoList" item="optionNo" separator=" UNION ALL">
			SELECT #{memberNo}, #{optionNo} FROM DUAL
		</foreach>
	</insert>
	
	<!-- 장바구니 조회 -->
	<select id="productCart" resultMap="productCart_rm">
		SELECT P_CATEGORY_NO, PRODUCT.P_CD, PRODUCT_NM, PRODUCT_PRICE, OPTION_TYPE.OPTION_CD, OPTION_NM, OPTION_PRICE, OPTION_TB.OPTION_NO, OPTION_COUNT
		FROM PRODUCT
		JOIN OPTION_TYPE ON (PRODUCT.P_CD = OPTION_TYPE.P_CD)
		JOIN OPTION_TB ON (OPTION_TYPE.OPTION_CD = OPTION_TB.OPTION_CD)
		JOIN CART ON (OPTION_TB.OPTION_NO = CART.OPTION_NO)
		JOIN MEMBER ON(CART.MEMBER_NO = MEMBER.MEMBER_NO)
		WHERE MEMBER.MEMBER_NO = #{memberNo}
	</select>
	
	<!-- x버튼 클릭 시 장바구니 삭제  -->
	<delete id="cartDelete">
		DELETE
		FROM CART
		WHERE MEMBER_NO = #{memberNo}
		AND OPTION_NO = #{optionNoDelete}
	</delete>
	
	<!-- 장바구니 내 옵션 수량 변경 - Minus -->
	<update id="minusCount">
		UPDATE OPTION_TB SET
		OPTION_COUNT = ${optionMinusCount}
		WHERE OPTION_NO = #{optionNoMinus}
	</update>
	
	<!-- 장바구니 내 옵션 수량 변경 - PLUS -->
	<update id="plusCount">
		UPDATE OPTION_TB SET
		OPTION_COUNT = ${optionPlusCount}
		WHERE OPTION_NO = #{optionNoPlus}
	</update>
</mapper>

