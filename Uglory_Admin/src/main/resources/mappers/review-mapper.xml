<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="reviewMapper">
	<resultMap type="review" id="review_rm">
		<id property="reviewNo" column="REVIEW_NO" />
		<result property="enrollDate" column="REVIEW_ENROLL_DT" />
		<result property="customerName" column="MEMBER_NAME" />
		<result property="reviewContent" column="REVIEW_CONTENT" />
	</resultMap>
	
	<resultMap type="reviewDetail" id="reviewDetail_rm">
		<id property="reviewNo" column="REVIEW_NO" />
		<result property="enrollDate" column="REVIEW_ENROLL_DT" />
		<result property="customerName" column="MEMBER_NAME" />
		<result property="reviewContent" column="REVIEW_CONTENT" />
		<result property="starRating" column="STAR_RATING" />
		<result property="productName" column="PRODUCT_NM" />
		<collection property="imageList"  column="REVIEW_NO" javaType="java.util.ArrayList" ofType="reviewImage" select="selectReviewImage"/>
	</resultMap>
	
	<resultMap type="reviewImage" id="reviewImage_rm">
		<id property="reviewImageNo" column="REVIEW_IMG_NO"/>
		<result property="reviewImageRename" column="REVIEW_IMG_ORIGINAL"/>
		<result property="reviewImageLevel" column="REVIEW_IMG_LEVEL"/>
		<result property="reviewNo" column="REVIEW_NO"/>
	</resultMap>
	
	
	<select id="selectAllReview" resultMap="review_rm">
		SELECT REVIEW_NO, REVIEW_ENROLL_DT, MEMBER_NAME, REVIEW_CONTENT
		FROM REVIEW
		JOIN MEMBER USING(MEMBER_NO)
		WHERE REVIEW_CD IN (1,2)
		ORDER BY REVIEW_ENROLL_DT DESC
	</select>
	
	<select id="searchReview" resultMap="review_rm">
		SELECT REVIEW_NO, REVIEW_ENROLL_DT, MEMBER_NAME, REVIEW_CONTENT
		FROM REVIEW
		JOIN MEMBER USING(MEMBER_NO)
		<if test='query != null and query !=""'>
			WHERE
			<choose>
				<when test='key == "enrollDate"'>
					REVIEW_ENROLL_DT BETWEEN TO_DATE('${query}', 'YYYY/MM/DD') AND TO_DATE('${query}', 'YYYY/MM/DD') + 0.99999
				</when>
				<when test='key == "customerName"'>
					MEMBER_NAME LIKE '%${query}%'
				</when>
			</choose>
		</if>
		AND REVIEW_CD IN (1,2)
		ORDER BY REVIEW_ENROLL_DT DESC
	</select>
	
	
	<select id="selectReviewDetail" resultMap="reviewDetail_rm">
		SELECT REVIEW_NO, REVIEW_ENROLL_DT, MEMBER_NAME, REVIEW_CONTENT, STAR_RATING, 
		    (SELECT CASE WHEN (SELECT REVIEW_CD FROM REVIEW WHERE REVIEW_NO = #{reviewNo}) = 1
		            THEN (SELECT S_NM 
		                 FROM REVIEW
		                 JOIN SUBS_ORDER USING(S_ORDER_CD)
		                 JOIN SUBS  USING(S_CD)
		                 WHERE REVIEW_NO = #{reviewNo})    
		        
		        ELSE (SELECT PRODUCT_NM 
		             FROM REVIEW
		             JOIN PRODUCT USING(P_CD)
		             WHERE REVIEW_NO = #{reviewNo})
		        END 
		    FROM DUAL) AS PRODUCT_NM
		FROM REVIEW
		JOIN MEMBER USING(MEMBER_NO)
		WHERE REVIEW_NO = #{reviewNo}
		AND REVIEW_CD IN (1,2)
	</select>
	
	
	
	<select id="selectReviewImage" resultMap="reviewImage_rm">
		SELECT * FROM REVIEW_IMG WHERE REVIEW_NO = #{reviewNo}
	</select>
	
	
	
	<update id="deleteReview">
		UPDATE REVIEW SET REVIEW_CD = (SELECT REVIEW_CD FROM REVIEW WHERE REVIEW_NO = #{reviewNo}) + 2
		WHERE REVIEW_NO = #{reviewNo}
	</update>
	
	
	
	<select id="countReview" resultType="_int">
		SELECT COUNT(*) FROM REVIEW WHERE REVIEW_CD IN (1,2)
	</select>



</mapper>
