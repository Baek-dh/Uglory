<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="paymentMapper">


	<resultMap type="payment" id="payment_rm">
		<id property="orderCode" column="ORDER_CD" />
		<result property="customerEmail" column="MEMBER_EMAIL" />
		<result property="customerName" column="MEMBER_NAME" />
		<result property="payAmount" column="PAY_AMOUNT" />
		<result property="payDate" column="PAY_DT" />
	</resultMap>
	
	
	
	<resultMap type="productPaymentDetail" id="pPaymentDetail_rm">
		<id property="orderCode" column="P_ORDER_CD"/>
		<result property="customerName" column="MEMBER_NAME"/>
		<result property="customerEmail" column="MEMBER_EMAIL"/>
		<result property="payAmount" column="P_PAY_AMOUNT"/>
		<result property="payDate" column="P_PAY_DT"/>
		<result property="deliveryAddress" column="P_ORDER_ADDR"/>
		<result property="deliveryStatement" column="DELIVERY_ST"/>
		<result property="deliveryRequest" column="P_DL_REQ"/>
		<result property="orderDate" column="P_ORDER_DT"/>
		<collection property="optionList" column="P_ORDER_CD" ofType="option" select="selectOption" javaType="java.util.ArrayList" />
	</resultMap>
	
	<resultMap type="option" id="option_rm">
		<id property="orderCode" column="ORDER_CD"/>
		<result property="optionName" column="OPTION_NM"/>
		<result property="productName" column="PRODUCT_NM"/>
		<result property="optionCount" column="OPTION_COUNT"/>
	</resultMap>
	
	
	
	<resultMap type="subsPaymentDetail" id="sPaymentDetail_rm">
		<id property="orderCode" column="S_ORDER_CD"/>
		<result property="customerName" column="MEMBER_NAME"/>
		<result property="customerEmail" column="MEMBER_EMAIL"/>
		<result property="payAmount" column="S_PAY_AMOUNT"/>
		<result property="payDate" column="S_PAY_DT"/>
		<result property="deliveryAddress" column="S_ORDER_ADDR"/>
		<result property="deliveryStatement" column="DELIVERY_ST"/>
		<result property="deliveryRequest" column="S_DL_REQ"/>
		<result property="deliveryDate" column="S_DELIVERY_DT"/>
		<result property="subscriptionName" column="S_NM"/>
		<result property="subscriptionCycle" column="S_CYCLE"/>
		<result property="subscriptionException" column="PRODUCT_NM"/>
	</resultMap>
	
	
	<resultMap type="refund" id="refund_rm">
		<id property="orderCode" column="P_ORDER_CD"/>
		<result property="refundAmount" column="P_REFUND_AMOUNT"/>
		<result property="refundDate" column="P_REFUND_DT"/>
		<result property="orderDate" column="P_ORDER_DT"/>
		<result property="refundStatement" column="P_REFUND_ST"/>
		<result property="customerEmail" column="MEMBER_EMAIL"/>
		<result property="customerName" column="MEMBER_NAME"/>
		<collection property="optionList" column="P_ORDER_CD" ofType="option" select="selectRefundOption" javaType="java.util.ArrayList" />
	</resultMap>
	

	<resultMap type="chart" id="chart_rm">
		<id property="chartDate" column="DT" />
		<result property="subsPerDate" column="SUBS" />
		<result property="productPerDate" column="PROD" />
	</resultMap>
	
	
	<resultMap type="monthlyChart" id="monthlyChart_rm">
		<id property="period" column="PERIOD" />
		<result property="productPerMonth" column="PROD_TOTAL" />
		<result property="subsPerMonth" column="SUBS_TOTAL" />
		<result property="totalPerMonth" column="TOTAL" />
	</resultMap>
	
	
	
	
	
	<!-- 결제 전체 조회 -->
	<select id="selectAllPayment" resultMap="payment_rm">
		SELECT S.S_ORDER_CD AS ORDER_CD, M.MEMBER_EMAIL, M.MEMBER_NAME, S.S_PAY_AMOUNT AS PAY_AMOUNT, TO_CHAR(S.S_PAY_DT, 'YYYY-MM-DD HH24:MI:SS') AS PAY_DT, '1' SORT
		FROM SUBS_PAY S
		JOIN MEMBER M ON S.MEMBER_NO = M.MEMBER_NO
		
		UNION ALL
		
		SELECT P.P_ORDER_CD AS ORDER_CD, M.MEMBER_EMAIL, M.MEMBER_NAME, P.P_PAY_AMOUNT AS PAY_AMOUNT, TO_CHAR(P.P_PAY_DT, 'YYYY-MM-DD HH24:MI:SS') AS PAY_DT, '2' SORT
		FROM PRODUCT_PAY P
		JOIN PRODUCT_ORDER PO ON P.P_ORDER_CD = PO.P_ORDER_CD
		LEFT JOIN PRODUCT_REFUND PR ON PO.P_ORDER_CD = PR.P_ORDER_CD 
		JOIN MEMBER M ON P.MEMBER_NO = M.MEMBER_NO
		WHERE PR.P_ORDER_CD IS NULL
		ORDER BY PAY_DT DESC
	</select>
	
	
	<!-- 결제 검색 조회 -->
	<select id="searchPayment" resultMap="payment_rm">
		SELECT S.S_ORDER_CD AS ORDER_CD, M.MEMBER_EMAIL, M.MEMBER_NAME, S.S_PAY_AMOUNT AS PAY_AMOUNT, TO_CHAR(S.S_PAY_DT, 'YYYY-MM-DD') AS PAY_DT, '1' SORT
		FROM SUBS_PAY S
		JOIN MEMBER M ON S.MEMBER_NO = M.MEMBER_NO
		<if test='query != null and query !=""'>
			WHERE 
			<choose>
				<when test='key == "orderNo"'>
					S.S_ORDER_CD LIKE '%${query}%'
				</when>
				<when test='key == "customerEmail"'>
					MEMBER_EMAIL LIKE '%${query}%'
				</when>
				<when test='key == "orderDate"'>
					S.S_PAY_DT BETWEEN TO_DATE('${query}', 'YYYY/MM/DD') AND TO_DATE('${query}', 'YYYY/MM/DD') + 0.99999
				</when>
			</choose>
		</if>
		UNION ALL
		SELECT P.P_ORDER_CD AS ORDER_CD, M.MEMBER_EMAIL, M.MEMBER_NAME, P.P_PAY_AMOUNT AS PAY_AMOUNT, TO_CHAR(P.P_PAY_DT, 'YYYY-MM-DD') AS PAY_DT, '2' SORT
		FROM PRODUCT_PAY P
		JOIN PRODUCT_ORDER PO ON P.P_ORDER_CD = PO.P_ORDER_CD
		LEFT JOIN PRODUCT_REFUND PR ON PO.P_ORDER_CD = PR.P_ORDER_CD 
		JOIN MEMBER M ON P.MEMBER_NO = M.MEMBER_NO
		<if test='query != null and query !=""'>
			WHERE 
			<choose>
				<when test='key == "orderNo"'>
					P.P_ORDER_CD LIKE '%${query}%'
				</when>
				<when test='key == "customerEmail"'>
					MEMBER_EMAIL LIKE '%${query}%'
				</when>
				<when test='key == "orderDate"'>
					P.P_PAY_DT BETWEEN TO_DATE('${query}', 'YYYY/MM/DD') AND TO_DATE('${query}', 'YYYY/MM/DD') + 0.99999
				</when>
			</choose>
		</if>
		AND PR.P_ORDER_CD IS NULL
		ORDER BY PAY_DT DESC
	</select>
	
	
	
	<!-- 개별 상품 상세 조회 -->
	<select id="selectProductPaymentDetail" resultMap="pPaymentDetail_rm">
		SELECT  P_ORDER_CD, MEMBER_NAME, MEMBER_EMAIL, P_PAY_AMOUNT,
		        P_PAY_DT, P_ORDER_ADDR, P_ORDER_DT, 
		        P_DL_REQ, DELIVERY_ST
		FROM PRODUCT_PAY
		JOIN MEMBER USING(MEMBER_NO)
		JOIN PRODUCT_ORDER USING (P_ORDER_CD)
		JOIN PRODUCT_DELIVERY USING (DELIVERY_CD)
		WHERE P_ORDER_CD = #{orderCode}
	</select>
	
	<select id="selectOption" resultMap="option_rm">
		SELECT P_ORDER_CD AS ORDER_CD, OPTION_NM, PRODUCT_NM, OPTION_COUNT
		FROM PRODUCT_PAY
		JOIN PRODUCT_ORDER USING(P_ORDER_CD)
		JOIN OPTION_TB USING(P_ORDER_CD)
		JOIN OPTION_TYPE USING(OPTION_CD)
		JOIN PRODUCT USING(P_CD)
		WHERE P_ORDER_CD = #{orderCode}
	</select>

	
	<!-- 구독 상품 상세 조회 -->
	<select id="selectSubsPaymentDetail" resultMap="sPaymentDetail_rm">
		SELECT  S_ORDER_CD, MEMBER_NAME, MEMBER_EMAIL, S_PAY_AMOUNT, S_PAY_DT, S_ORDER_ADDR, 
		        S_DELIVERY_DT, DELIVERY_ST, S_DL_REQ, S_NM, S_CYCLE,
		        (SELECT LISTAGG(PRODUCT_NM, ', ') WITHIN GROUP (ORDER BY S_ORDER_CD)
		        FROM SUBS_ORDER 
		        JOIN SUBS_EXCEPTION USING(S_ORDER_CD)
		        JOIN PRODUCT USING(P_CD)
		        WHERE S_ORDER_CD = #{orderCode}) PRODUCT_NM
		FROM SUBS_PAY
		JOIN MEMBER USING(MEMBER_NO)
		JOIN SUBS_DELIVERY USING(S_ORDER_CD)
		JOIN SUBS_ORDER USING(S_ORDER_CD)
		JOIN PRODUCT_DELIVERY USING(DELIVERY_CD)
		JOIN SUBS USING(S_CD)
		WHERE S_ORDER_CD = #{orderCode}
	</select>
	
	
	<select id="dailySales" resultType="_int">
		SELECT (NVL(SUM(TODAY_PAY_AMOUNT), 0) - NVL(SELECT_REFUND_AMOUNT(SYSDATE), 0)) PAY_AMOUNT_PER_DAY
		FROM(
		    SELECT SUM(P_PAY_AMOUNT) TODAY_PAY_AMOUNT
		    FROM PRODUCT_PAY
		    WHERE P_PAY_DT BETWEEN TO_DATE(SYSDATE, 'YY-MM-DD') AND TO_DATE(SYSDATE, 'YY-MM-DD') +0.99999
		
		    UNION ALL
		
		    SELECT SUM(S_PAY_AMOUNT) TODAY_PAY_AMOUNT
		    FROM SUBS_PAY
		    WHERE S_PAY_DT BETWEEN TO_DATE(SYSDATE, 'YY-MM-DD') AND TO_DATE(SYSDATE, 'YY-MM-DD') +0.99999)
	</select>


	<select id="totalSales" resultType="_int">
		SELECT NVL(SUM(TODAY_PAY_AMOUNT), 0) PAY_AMOUNT_TOTAL
		FROM(
		    SELECT SUM(P_PAY_AMOUNT) TODAY_PAY_AMOUNT
		    FROM PRODUCT_PAY
		
		    UNION ALL
		
		    SELECT SUM(S_PAY_AMOUNT) TODAY_PAY_AMOUNT
		    FROM SUBS_PAY
		
		    UNION ALL
		    SELECT (NVL(SUM(P_REFUND_AMOUNT), 0) * -1) FROM PRODUCT_REFUND WHERE P_REFUND_ST = 'Y')
	</select>
	
	
	
	<select id="selectRefundList" resultMap="refund_rm">
		SELECT  P_ORDER_CD, P_REFUND_AMOUNT, P_REFUND_DT, P_ORDER_DT,
		        MEMBER_EMAIL, MEMBER_NAME, P_REFUND_ST
		FROM PRODUCT_REFUND
		JOIN PRODUCT_ORDER USING(P_ORDER_CD)
		JOIN MEMBER USING(MEMBER_NO)
	</select>
	
	<select id="selectRefundOption" resultMap="option_rm">
		SELECT OPTION_COUNT, OPTION_NM, PRODUCT_NM
		FROM OPTION_TB 
		JOIN OPTION_TYPE USING(OPTION_CD)
		JOIN PRODUCT USING(P_CD)
		WHERE P_ORDER_CD = #{orderCode}
	</select>
	
	
	<select id="prodPaymentCount" resultType="_int">
	SELECT COUNT(*) FROM PRODUCT_PAY
	</select>
	
	
	<select id="refundCount" resultType="_int">
		SELECT COUNT(*) FROM PRODUCT_REFUND
	</select>
	
	
	<select id="refundDone" resultType="_int">
		SELECT COUNT(*) FROM PRODUCT_REFUND WHERE P_REFUND_ST = 'Y'
	</select>
	
	
	<select id="subsCount" resultType="_int">
		SELECT COUNT(*) FROM SUBS_PAY
		JOIN SUBS_ORDER USING(S_ORDER_CD)
		WHERE S_CANCEL = 'N'
	</select>
	
	<update id="refundHandling">
		UPDATE PRODUCT_REFUND SET P_REFUND_ST = 'Y' WHERE P_ORDER_CD = #{orderCode}
	</update>
	
	
	<select id="selectChartData" resultMap="chart_rm">
		SELECT 
		    LISTAGG(DT, ',') WITHIN GROUP (ORDER BY DT)  DT,
		    LISTAGG(SUBS, ',') WITHIN GROUP (ORDER BY ROWNUM)  SUBS,
		    LISTAGG(PROD, ',') WITHIN GROUP (ORDER BY ROWNUM)  PROD
		FROM( 
		    SELECT DT,
		    NVL( (SELECT SUM(S_PAY_AMOUNT) FROM SUBS_PAY WHERE TO_CHAR(S_PAY_DT, 'YYYY-MM-DD') = A.DT) ,0 ) SUBS,
		    NVL(  (SELECT SUM(P_PAY_AMOUNT) FROM PRODUCT_PAY WHERE TO_CHAR(P_PAY_DT, 'YYYY-MM-DD') = A.DT), 0) PROD
		    FROM (SELECT TO_CHAR(SYSDATE + LEVEL - 7, 'YYYY-MM-DD') DT
		        FROM DUAL
		        CONNECT BY LEVEL &lt;= 7)  A)	
	</select>
	
	
	<select id="selectMonthlyChartData" resultMap="monthlyChart_rm">
		SELECT PERIOD, (PROD_TOTAL - REFUND_TOTAL) AS PROD_TOTAL, SUBS_TOTAL, "PROD_TOTAL" + "SUBS_TOTAL" - "REFUND_TOTAL" AS TOTAL
		FROM (
		SELECT TO_CHAR(P_ORDER_DT, 'YYYY-MM') PERIOD, 
		    SUM(TOTAL_PRICE) "PROD_TOTAL",
		    ( SELECT SUM(S_PAY_AMOUNT) FROM SUBS_PAY
		       WHERE TO_CHAR(S_PAY_DT, 'YYYY-MM') = TO_CHAR(P_ORDER_DT, 'YYYY-MM')
		     ) "SUBS_TOTAL"
		    ,(SELECT SUM( P_REFUND_AMOUNT ) FROM PRODUCT_REFUND
		       WHERE TO_CHAR(P_REFUND_DT, 'YYYY-MM')  = TO_CHAR(P_ORDER_DT, 'YYYY-MM')
		    ) "REFUND_TOTAL"
		    
		FROM PRODUCT_ORDER
		GROUP BY TO_CHAR(P_ORDER_DT, 'YYYY-MM') ) A
	</select>
	
	
	
	
	
</mapper>
